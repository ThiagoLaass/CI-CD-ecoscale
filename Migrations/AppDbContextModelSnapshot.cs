// <auto-generated />
using System;
using EcoScale.src.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EcoScale.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EcoScale.src.Models.Abstract.AreaPlanilha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("area_planilha_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nom_area");

                    b.Property<int?>("planilha_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("planilha_id");

                    b.ToTable("area_planilha", (string)null);
                });

            modelBuilder.Entity("EcoScale.src.Models.Abstract.CriterioPlanilha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("criterio_planilha_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nom_criterio");

                    b.Property<int?>("tema_planilha_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("tema_planilha_id");

                    b.ToTable("criterio_planilha", (string)null);
                });

            modelBuilder.Entity("EcoScale.src.Models.Abstract.ItemAvaliadoPlanilha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("item_avaliado_planilha_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dsc_item");

                    b.Property<int?>("criterio_planilha_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("criterio_planilha_id");

                    b.ToTable("item_avaliado_planilha", (string)null);
                });

            modelBuilder.Entity("EcoScale.src.Models.Abstract.Planilha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("planilha_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Removido")
                        .HasColumnType("boolean")
                        .HasColumnName("boo_excluido");

                    b.HasKey("Id");

                    b.ToTable("planilha", (string)null);
                });

            modelBuilder.Entity("EcoScale.src.Models.Abstract.TemaPlanilha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tema_planilha_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nom_tema");

                    b.Property<int?>("area_planilha_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("area_planilha_id");

                    b.ToTable("tema_planilha", (string)null);
                });

            modelBuilder.Entity("EcoScale.src.Models.Abstract.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmado")
                        .HasColumnType("boolean")
                        .HasColumnName("boo_email_confirmado");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("senha");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("usuario", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("EcoScale.src.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("area_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nom_area");

                    b.Property<int?>("questionario_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("questionario_id");

                    b.ToTable("area");
                });

            modelBuilder.Entity("EcoScale.src.Models.Criterio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("criterio_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nom_criterio");

                    b.Property<int?>("tema_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("tema_id");

                    b.ToTable("criterio");
                });

            modelBuilder.Entity("EcoScale.src.Models.ItemAvaliado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("item_avaliado_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dsc_item");

                    b.Property<string>("Resposta")
                        .HasColumnType("text")
                        .HasColumnName("resposta");

                    b.Property<int?>("criterio_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("criterio_id");

                    b.ToTable("item_avaliado");
                });

            modelBuilder.Entity("EcoScale.src.Models.Notifications.EmailConfirmacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("num_codigo");

                    b.Property<bool>("Confirmado")
                        .HasColumnType("boolean")
                        .HasColumnName("boo_confirmado");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("boo_excluido");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expires_at");

                    b.Property<string>("RefId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ref_id");

                    b.HasKey("Id");

                    b.ToTable("email_confirmacao");
                });

            modelBuilder.Entity("EcoScale.src.Models.Notifications.Notificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("notificacao_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Lida")
                        .HasColumnType("boolean")
                        .HasColumnName("boo_lida");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mensagem");

                    b.HasKey("Id");

                    b.ToTable("notificacao");
                });

            modelBuilder.Entity("EcoScale.src.Models.Questionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("questionario_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Removido")
                        .HasColumnType("boolean")
                        .HasColumnName("boo_excluido");

                    b.Property<int>("empresa_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("empresa_id");

                    b.ToTable("questionario", (string)null);
                });

            modelBuilder.Entity("EcoScale.src.Models.Recomendacoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("recomendacoes_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.PrimitiveCollection<string[]>("Projetos1Ano")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("arr_projetos_1_ano");

                    b.PrimitiveCollection<string[]>("QuickWins90d")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("arr_quick_wins_90d");

                    b.PrimitiveCollection<string[]>("TransformacoesEstrategicas")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("arr_transformacoes_estrategicas");

                    b.HasKey("Id");

                    b.ToTable("recomendacoes");
                });

            modelBuilder.Entity("EcoScale.src.Models.Relatorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("relatorio_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dsc_diagnostico");

                    b.Property<double>("NotaSustentabilidade")
                        .HasColumnType("double precision")
                        .HasColumnName("nota");

                    b.PrimitiveCollection<string[]>("PontosCriticos")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("arr_pontos_criticos");

                    b.PrimitiveCollection<string[]>("PontosFortes")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("arr_pontos_fortes");

                    b.Property<bool>("Revisado")
                        .HasColumnType("boolean")
                        .HasColumnName("boo_revisado");

                    b.Property<int?>("RevisorId")
                        .HasColumnType("integer");

                    b.Property<int>("empresa_id")
                        .HasColumnType("integer");

                    b.Property<int>("recomendacoes_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RevisorId");

                    b.HasIndex("empresa_id");

                    b.HasIndex("recomendacoes_id");

                    b.ToTable("relatorio");
                });

            modelBuilder.Entity("EcoScale.src.Models.ReqAvaliacaoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("req_avaliacao_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Avaliado")
                        .HasColumnType("boolean")
                        .HasColumnName("avaliado");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<bool>("EmAberto")
                        .HasColumnType("boolean")
                        .HasColumnName("em_aberto");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("motivo");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("relatorio_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("relatorio_id");

                    b.ToTable("req_avaliacao");
                });

            modelBuilder.Entity("EcoScale.src.Models.ResponsavelEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("responsavel_empresa_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cpf");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("responsavel_empresa");
                });

            modelBuilder.Entity("EcoScale.src.Models.Tema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tema_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nom_tema");

                    b.Property<int?>("area_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("area_id");

                    b.ToTable("tema");
                });

            modelBuilder.Entity("EcoScale.src.Models.Empresa", b =>
                {
                    b.HasBaseType("EcoScale.src.Models.Abstract.Usuario");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cnpj");

                    b.Property<string>("Contexto")
                        .HasColumnType("text")
                        .HasColumnName("dsc_contexto");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("dsc_empresa");

                    b.Property<string>("EnderecoSede")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("endereco_sede");

                    b.Property<string>("FotoMimeType")
                        .HasColumnType("text")
                        .HasColumnName("foto_perfil_mime");

                    b.Property<byte[]>("FotoPerfil")
                        .HasColumnType("bytea")
                        .HasColumnName("foto_perfil");

                    b.Property<bool>("IsRemovida")
                        .HasColumnType("boolean")
                        .HasColumnName("boo_removida");

                    b.Property<string>("NumTelefone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("num_telefone");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("razao_social");

                    b.Property<string>("SetorAtuacao")
                        .HasColumnType("text")
                        .HasColumnName("setor_atuacao");

                    b.Property<int>("responsavel_id")
                        .HasColumnType("integer");

                    b.HasIndex("responsavel_id");

                    b.ToTable("empresa", (string)null);
                });

            modelBuilder.Entity("EcoScale.src.Models.Moderador", b =>
                {
                    b.HasBaseType("EcoScale.src.Models.Abstract.Usuario");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.ToTable("moderador", (string)null);
                });

            modelBuilder.Entity("EcoScale.src.Models.Abstract.AreaPlanilha", b =>
                {
                    b.HasOne("EcoScale.src.Models.Abstract.Planilha", null)
                        .WithMany("Areas")
                        .HasForeignKey("planilha_id");
                });

            modelBuilder.Entity("EcoScale.src.Models.Abstract.CriterioPlanilha", b =>
                {
                    b.HasOne("EcoScale.src.Models.Abstract.TemaPlanilha", null)
                        .WithMany("Criterios")
                        .HasForeignKey("tema_planilha_id");
                });

            modelBuilder.Entity("EcoScale.src.Models.Abstract.ItemAvaliadoPlanilha", b =>
                {
                    b.HasOne("EcoScale.src.Models.Abstract.CriterioPlanilha", null)
                        .WithMany("Itens")
                        .HasForeignKey("criterio_planilha_id");
                });

            modelBuilder.Entity("EcoScale.src.Models.Abstract.TemaPlanilha", b =>
                {
                    b.HasOne("EcoScale.src.Models.Abstract.AreaPlanilha", null)
                        .WithMany("Temas")
                        .HasForeignKey("area_planilha_id");
                });

            modelBuilder.Entity("EcoScale.src.Models.Area", b =>
                {
                    b.HasOne("EcoScale.src.Models.Questionario", null)
                        .WithMany("Areas")
                        .HasForeignKey("questionario_id");
                });

            modelBuilder.Entity("EcoScale.src.Models.Criterio", b =>
                {
                    b.HasOne("EcoScale.src.Models.Tema", null)
                        .WithMany("Criterios")
                        .HasForeignKey("tema_id");
                });

            modelBuilder.Entity("EcoScale.src.Models.ItemAvaliado", b =>
                {
                    b.HasOne("EcoScale.src.Models.Criterio", null)
                        .WithMany("Itens")
                        .HasForeignKey("criterio_id");
                });

            modelBuilder.Entity("EcoScale.src.Models.Questionario", b =>
                {
                    b.HasOne("EcoScale.src.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("empresa_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("EcoScale.src.Models.Relatorio", b =>
                {
                    b.HasOne("EcoScale.src.Models.Moderador", "Revisor")
                        .WithMany()
                        .HasForeignKey("RevisorId");

                    b.HasOne("EcoScale.src.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("empresa_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcoScale.src.Models.Recomendacoes", "Recomendacoes")
                        .WithMany()
                        .HasForeignKey("recomendacoes_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Recomendacoes");

                    b.Navigation("Revisor");
                });

            modelBuilder.Entity("EcoScale.src.Models.ReqAvaliacaoModel", b =>
                {
                    b.HasOne("EcoScale.src.Models.Relatorio", "Relatorio")
                        .WithMany()
                        .HasForeignKey("relatorio_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Relatorio");
                });

            modelBuilder.Entity("EcoScale.src.Models.Tema", b =>
                {
                    b.HasOne("EcoScale.src.Models.Area", null)
                        .WithMany("Temas")
                        .HasForeignKey("area_id");
                });

            modelBuilder.Entity("EcoScale.src.Models.Empresa", b =>
                {
                    b.HasOne("EcoScale.src.Models.Abstract.Usuario", null)
                        .WithOne()
                        .HasForeignKey("EcoScale.src.Models.Empresa", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcoScale.src.Models.ResponsavelEmpresa", "Responsavel")
                        .WithMany()
                        .HasForeignKey("responsavel_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("EcoScale.src.Models.Moderador", b =>
                {
                    b.HasOne("EcoScale.src.Models.Abstract.Usuario", null)
                        .WithOne()
                        .HasForeignKey("EcoScale.src.Models.Moderador", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EcoScale.src.Models.Abstract.AreaPlanilha", b =>
                {
                    b.Navigation("Temas");
                });

            modelBuilder.Entity("EcoScale.src.Models.Abstract.CriterioPlanilha", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("EcoScale.src.Models.Abstract.Planilha", b =>
                {
                    b.Navigation("Areas");
                });

            modelBuilder.Entity("EcoScale.src.Models.Abstract.TemaPlanilha", b =>
                {
                    b.Navigation("Criterios");
                });

            modelBuilder.Entity("EcoScale.src.Models.Area", b =>
                {
                    b.Navigation("Temas");
                });

            modelBuilder.Entity("EcoScale.src.Models.Criterio", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("EcoScale.src.Models.Questionario", b =>
                {
                    b.Navigation("Areas");
                });

            modelBuilder.Entity("EcoScale.src.Models.Tema", b =>
                {
                    b.Navigation("Criterios");
                });
#pragma warning restore 612, 618
        }
    }
}
